{"version":3,"sources":["AddCategory.js","GifGrid.js","Helpers/getGifs.js","GifsCategories.js","useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","GifGrid","title","imageUrl","console","log","className","src","alt","getGifs","a","url","encodeURI","fetch","resp","json","data","dataFilter","map","gifInfo","id","images","downsized","GifsCategories","loading","state","setstate","useEffect","then","res","useFetchGifs","imgData","key","GifExpertApp","categories","setCategory","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,0BAAMC,SAXO,SAACC,GAEdA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAC5BR,GAAc,SAAAS,GAAQ,OAAIP,GAAJ,mBAAkBO,OACxCN,EAAc,OAOV,2BACIO,KAAK,OACLC,MAAOT,EACPU,SArBC,SAACP,GAGVF,EAAcE,EAAEQ,OAAOF,YCRlBG,EAAU,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,SAG3B,OADAC,QAAQC,IAAI,oBAER,yBAAKC,UAAU,WACX,yBAAKC,IAAKJ,EAAUK,IAAKN,IACzB,oCAAaA,K,uBCPZO,EAAO,uCAAC,WAAMb,GAAN,uBAAAc,EAAA,6DAEXC,EAFW,0FAE6EC,UAAUhB,GAFvF,sBAICiB,MAAMF,GAJP,cAIXG,EAJW,gBAKGA,EAAKC,OALR,uBAKVC,EALU,EAKVA,KAEDC,EAAYD,EAAKE,KAAI,SAAAC,GAAU,IAAD,EAEhC,MAAO,CAEHC,GAAGD,EAAQC,GACXlB,MAAMiB,EAAQjB,MACdC,SAAQ,UAACgB,EAAQE,cAAT,aAAC,EAAgBC,UAAUX,QAb1B,kBAkBTM,GAlBS,4CAAD,sDCGPM,EAAiB,SAAC,GAAgB,IAAf3B,EAAc,EAAdA,SAAc,ECDlB,SAACA,GAAc,IAAD,EAEZR,mBAAS,CAE/B4B,KAAK,GACLQ,SAAQ,IAL0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAVAC,qBAAU,WAENlB,EAAQb,GAAUgC,MAAK,SAAAC,GAAG,OAAEH,EAAS,CACjCV,KAAKa,EACLL,SAAQ,SAGd,CAAC5B,IAGI6B,EDbqBK,CAAalC,GAA7ByB,EAL8B,EAKnCL,KAAYQ,EALuB,EAKvBA,QAInB,OACI,oCACC,4BAAK5B,GAEF,2BAAI4B,EAAQ,aAAa,qBAEzB,yBAAKlB,UAAU,YAGXe,EAAOH,KAAI,SAACa,GAER,OAAO,kBAAC,EAAD,eACKC,IAAKD,EAAQX,IACTW,UEtB7B,SAASE,IAAe,IAAD,EAEQ7C,mBAAS,CAAC,YAFlB,mBAEnB8C,EAFmB,KAEPC,EAFO,KAM1B,OAAQ,oCACA,4CACA,6BACD,kBAAC,EAAD,CAAahD,cAAegD,IAG3B,4BAGQD,EAAWhB,KAAI,SAACtB,GAAD,OAAY,kBAAC,EAAD,CAAgBoC,IAAKpC,EAAUA,SAAUA,S,MCZxFwC,IAASC,OAEL,kBAACJ,EAAD,MAEFK,SAASC,eAAe,U","file":"static/js/main.74a7be1d.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    \r\n    const change=(e)=>{\r\n\r\n        \r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const submitForm=(e)=>{\r\n\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n        setCategories(category=> [inputValue,...category]);\r\n        setInputValue('');\r\n        \r\n    };\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitForm}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={change}\r\n            ></input>\r\n        </form>\r\n    )\r\n\r\n}\r\nAddCategory.propTypes={\r\n\r\nsetCategories:PropTypes.func.isRequired    \r\n    \r\n    }","import React from 'react'\r\n\r\nexport const GifGrid = ({title,imageUrl}) => {\r\n    \r\n    console.log('GifGrid function')\r\n    return (\r\n        <div className=\"imgCont\">\r\n            <img src={imageUrl} alt={title}/>\r\n            <figcaption>{title}</figcaption>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs=async(category)=>{\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?api_key=OcB8FBvbSy3wGfNZvYToH6guRkg8Gwcu&q=${ encodeURI(category) }&limit=10`\r\n    \r\n    const resp= await fetch(url)\r\n    const {data}= await resp.json()\r\n    \r\n    const dataFilter= data.map(gifInfo=>{\r\n\r\n        return {\r\n\r\n            id:gifInfo.id,\r\n            title:gifInfo.title,\r\n            imageUrl:gifInfo.images?.downsized.url,\r\n\r\n        }\r\n\r\n    })\r\n     return dataFilter\r\n        };","import React from 'react'\r\nimport { GifGrid } from './GifGrid';\r\n//import { getGifs } from './Helpers/getGifs'\r\nimport {useFetchGifs} from './useFetchGifs'\r\nexport const GifsCategories = ({category}) => {\r\n    \r\n   \r\n    \r\n\r\n    const {data:images,loading}=useFetchGifs(category)\r\n   \r\n    \r\n    \r\n    return (\r\n        <>\r\n         <h3>{category}</h3>\r\n          \r\n            <p>{loading?'loading...':'loading complete!'}</p>\r\n\r\n            <div className=\"imgsGrid\">\r\n\r\n            {\r\n                images.map((imgData)=>{\r\n                    \r\n                    return <GifGrid \r\n                                key={imgData.id}\r\n                                {...imgData}\r\n                            />\r\n                                \r\n                    \r\n                })\r\n            }\r\n                \r\n            </div>\r\n               \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"./Helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n\r\n        data:[],\r\n        loading:true\r\n\r\n    })\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category).then(res=>setstate({\r\n            data:res,\r\n            loading:false\r\n        }))\r\n\r\n    },[category])\r\n   \r\n    \r\n    return state\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifsCategories } from './GifsCategories';\r\n\r\nexport function GifExpertApp(){\r\n\r\n    const [categories, setCategory] = useState(['Vikings'])\r\n\r\n    \r\n\r\n    return  <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n           <AddCategory setCategories={setCategory} />\r\n\r\n\r\n            <ol>\r\n                {\r\n\r\n                    categories.map((category)=><GifsCategories key={category} category={category}/>)\r\n\r\n                }\r\n            </ol>\r\n            </>\r\n\r\n\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}